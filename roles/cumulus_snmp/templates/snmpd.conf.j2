{% set node = node[ansible_hostname] %}
{% if node.snmp is defined %}
{%   set snmp = node.snmp %}
{% endif %}

###############################################################################
#
# EXAMPLE.conf:
#   An example configuration file for configuring the Net-SNMP agent ('snmpd')
#   See the 'snmpd.conf(5)' man page for details
#
#  Some entries are deliberately commented out, and will need to be explicitly activated
#
###############################################################################
#
#  AGENT BEHAVIOUR
#
{% if snmp.pollserver is defined %}
#  Listen for connections from the local system only
agentAddress  udp:127.0.0.1:161
#  Listen for connections on all interfaces (both IPv4 *and* IPv6)
agentAddress udp:161,udp6:[::1]:161
{% else %}
#  Listen for connections from the local system only
agentAddress  udp:127.0.0.1:161
#  Listen for connections on all interfaces (both IPv4 *and* IPv6)
#agentAddress udp:161,udp6:[::1]:161
{% endif %}



###############################################################################
#
#  SNMPv3 AUTHENTICATION
#
#  Note that these particular settings don't actually belong here.
#  They should be copied to the file /var/lib/snmp/snmpd.conf
#     and the passwords changed, before being uncommented in that file *only*.
#  Then restart the agent

#  createUser authOnlyUser  MD5 "remember to change this password"
#  createUser authPrivUser  SHA "remember to change this one too"  DES
#  createUser internalUser  MD5 "this is only ever used internally, but still change the password"

# simple no auth user
#createUser user1

# user with MD5 authentication
#createUser user2 MD5 user2password

# user with MD5 for auth and DES for encryption
#createUser user3 MD5 user3password DES user3encryption

# user666 with SHA for authentication and AES for encryption
#createUser user666 SHA user666password AES user666encryption

# user999 with MD5 for authentication and DES for encryption
#createUser user999 MD5 user999password DES user999encryption



{% if snmp.md5 is defined %}
{%   set md5 = "MD5 " + snmp.md5 %}
{% else %}
{%   set md5 = "" %}
{% endif %}

{% if snmp.sha is defined %}
{%   set sha = "SHA " + snmp.sha %}
{% else %}
{%   set sha = "" %}
{% endif %}

{% if snmp.aes is defined %}
{%   set aes = "AES " + snmp.aes %}
{% else %}
{%   set aes = "" %}
{% endif %}

{% if snmp.des is defined %}
{%   set des = "DES " + snmp.des %}
{% else %}
{%   set des = "" %}
{% endif %}

{% if snmp.user is defined %}
createUser {{snmp.user}} {{md5}}{{sha}} {{aes}}{{des}}
{% endif %}





#  If you also change the usernames (which might be sensible),
#  then remember to update the other occurances in this example config file to match.



###############################################################################
#
#  ACCESS CONTROL
#
#  system + hrSystem groups only
view   systemonly  included   .1.3.6.1.2.1.1
# interfaces
view   systemonly  included   .1.3.6.1.2.1.2
# Address Translation Table
view   systemonly  included   .1.3.6.1.2.1.3
# ipForwarding mib
view   systemonly  included   .1.3.6.1.2.1.4.1
# default TTL
view   systemonly  included   .1.3.6.1.2.1.4.2
# total input ip datagrams received
view   systemonly  included   .1.3.6.1.2.1.4.3
# ip input header errors
view   systemonly  included   .1.3.6.1.2.1.4.4
# ip datagrams discarded due to address errors
view   systemonly  included   .1.3.6.1.2.1.4.5
# ip-forward-mib
view   systemonly  included   .1.3.6.1.2.1.4.24
# Note: Quagga snmpd support is currently disabled
# Please see release note 88 (RN-88)
# quagga ospf
# view   systemonly  included   .1.3.6.1.2.1.14
# quagga bgp
# view   systemonly  included   .1.3.6.1.2.1.15
# quagga ospf6
# view   systemonly  included   .1.3.6.1.3.102
# lldpd
view   systemonly  included   .1.0.8802.1.1.2
# entire HOST-RESOURCES mib
#view  systemonly  included   .1.3.6.1.2.1.25
# HOST-RESOURCES-MIB::hrSystem
view   systemonly  included   .1.3.6.1.2.1.25.1
# HOST-RESOURCES-MIB::hrStorageSize
view   systemonly  included   .1.3.6.1.2.1.25.2
# Various other HOST-RESOURCES-MIB tables
view   systemonly  included   .1.3.6.1.2.1.25.3
# ifMIB
view   systemonly  included  .1.3.6.1.2.1.31
# lmsensors (depricated: please use ENTITY-SENSOR MIB)
# view   systemonly  included   .1.3.6.1.4.1.2021.13.16
# ENTITY MIB
view   systemonly  included   .1.3.6.1.2.1.47
# ENTITY-SENOR MIB
view   systemonly  included   .1.3.6.1.2.1.99
# Cumulus specific Resource Query MIB
view   systemonly  included   .1.3.6.1.4.1.40310.1
# Cumulus specific interface Counters MIB
view   systemonly  included   .1.3.6.1.4.1.40310.2
# Cumulus specific interface Power Over Ethernet MIB
#view   systemonly  included   .1.3.6.1.4.1.40310.3
# BRIDGE-MIB and Q-BRIDGE-MIB tables
#view   systemonly  included   .1.3.6.1.2.1.17
# BGP4 MIB (RFC-4273)
#view   systemonly  included   .1.3.6.1.2.1.15

{% if snmp.pollserver %}
rocommunity public default
{% endif %}

                                                 #  Full access from the local host
#rocommunity public localhost
                                                 #  Full access from outside the local host
#rocommunity public default
                                                 #  Default access to basic system info
#rocommunity public  default    -V systemonly
                                                 #  rocommunity6 is for IPv6
#rocommunity6 public  default   -V systemonly

                                                 #  Full access from an example network
                                                 #     Adjust this network address to match your local
                                                 #     settings, change the community string,
                                                 #     and check the 'agentAddress' setting above
#rocommunity secret  10.0.0.0/16

                                                 #  Full read-only access for SNMPv3
#rouser   authOnlyUser
                                                 #  Full write access for encrypted requests
                                                 #     Remember to activate the 'createUser' lines above
#rwuser   authPrivUser   priv

#  It's no longer typically necessary to use the full 'com2sec/group/access' configuration
#  r[ow]user and r[ow]community, together with suitable views, should cover most requirements



###############################################################################
#
#  SYSTEM INFORMATION
#

#  Note that setting these values here, results in the corresponding MIB objects being 'read-only'
#  See snmpd.conf(5) for more details
sysLocation    Sitting on the Dock of the Bay
sysContact     Me <me@example.org>
sysObjectID    1.3.6.1.4.1.40310
                                                 # Application + End-to-End layers
sysServices    72


#
#  Process Monitoring
#
                               # At least one  'mountd' process
#proc  mountd
                               # No more than 4 'ntalkd' processes - 0 is OK
#proc  ntalkd    4
                               # At least one 'sendmail' process, but no more than 10
#proc  sendmail 10 1

#  Walk the UCD-SNMP-MIB::prTable to see the resulting output
#  Note that this table will be empty if there are no "proc" entries in the snmpd.conf file


#
#  Disk Monitoring
#
                               # 10MBs required on root disk, 5% free on /var, 10% free on all other disks
#disk       /     10000
#disk       /var  5%
#includeAllDisks  10%

#  Walk the UCD-SNMP-MIB::dskTable to see the resulting output
#  Note that this table will be empty if there are no "disk" entries in the snmpd.conf file


#
#  System Load
#
                               # Unacceptable 1-, 5-, and 15-minute load averages
#load   12 10 5

#  Walk the UCD-SNMP-MIB::laTable to see the resulting output
#  Note that this table *will* be populated, even without a "load" entry in the snmpd.conf file



###############################################################################
#
#  ACTIVE MONITORING
#

                                    #   send SNMPv1  traps
#trapsink     localhost public

{% if snmp.trapsink is defined %}
trapsink {{snmp.trapsink}} public
{% endif %}

#trap2sink    localhost public
                                    #   send SNMPv2c INFORMs
#informsink   localhost public

#  Note that you typically only want *one* of these three lines
#  Uncommenting two (or all three) will result in multiple copies of each notification.


#
#  Event MIB - automatically generate alerts
#
                                   # Remember to activate the 'createUser' lines above
#iquerySecName   internalUser
{% if snmp.iquerySecName is defined %}
iquerySecName {{snmp.iquerySecName}}
{% endif %}
#rouser          internalUser
{% if snmp.rouser is defined %}
rouser {{snmp.rouser}}
{% endif %}

                                   # generate traps on UCD error conditions
#defaultMonitors          yes

                                   # generate traps on linkUp/Down
#linkUpDownNotifications  yes
{% if snmp.linkUpDownNotifications is defined and snmp.linkUpDownNotifications == "enable" %}
linkUpDownNotifications  yes
{% endif %}



###############################################################################
#
#  EXTENDING THE AGENT
#

#
#  Arbitrary extension commands
#
# extend    test1   /bin/echo  Hello, world!
# extend-sh test2   echo Hello, world! ; echo Hi there ; exit 35
#extend-sh test3   /bin/sh /tmp/shtest

#  Note that this last entry requires the script '/tmp/shtest' to be created first,
#    containing the same three shell commands, before the line is uncommented

#  Walk the NET-SNMP-EXTEND-MIB tables (nsExtendConfigTable, nsExtendOutput1Table
#     and nsExtendOutput2Table) to see the resulting output

#  Note that the "extend" directive supercedes the previous "exec" and "sh" directives
#  However, walking the UCD-SNMP-MIB::extTable should still returns the same output,
#     as well as the fuller results in the above tables.


#
#  "Pass-through" MIB extension command
#
#pass .1.3.6.1.4.1.8072.2.255  /bin/sh       PREFIX/local/passtest
#pass .1.3.6.1.4.1.8072.2.255  /usr/bin/perl PREFIX/local/passtest.pl

# Show the interface name in the IF-MIB::ifAlias OIDs
pass_persist .1.3.6.1.2.1.31.1.1.1.18 /usr/share/snmp/snmpifAlias_pp.py
# Update the Cumulus Enterprise Resource Query MIB
pass_persist .1.3.6.1.4.1.40310.1 /usr/share/snmp/resq_pp.py
# Update the Cumulus Enterprise Counters MIB (discards, overflows, etc)
pass_persist .1.3.6.1.4.1.40310.2 /usr/share/snmp/cl_drop_cntrs_pp.py
# Update the Cumulus Enterprise Power Over Ethernet MIB
#pass_persist .1.3.6.1.4.1.40310.3 /usr/share/snmp/cl_poe_pp.py
# set the sysDescr (note the increased priority -p 10)
pass -p 10 .1.3.6.1.2.1.1.1 /usr/share/snmp/sysDescr_pass.py
# BRIDGE-MIB and Q-BRIDGE-MIB tables
#pass_persist  .1.3.6.1.2.1.17 /usr/share/snmp/bridge_pp.py
# ENTITY MIB
pass_persist  .1.3.6.1.2.1.47 /usr/share/snmp/entity_pp.py
# ENTITY-SENSOR MIB
pass_persist  .1.3.6.1.2.1.99 /usr/share/snmp/entity_sensor_pp.py

# BGP4 MIB
# Warning: By default, bgp4_pp.py does not show the bgp4PathAttrTable
#  since this can be large and result in a periodic CPU spike.  To enable
#  this table, add --include-paths to the end of the following line after
#  uncommenting it.
#pass_persist  .1.3.6.1.2.1.15 /usr/share/snmp/bgp4_pp.py

# Note that this requires one of the two 'passtest' scripts to be installed first,
#    before the appropriate line is uncommented.
# These scripts can be found in the 'local' directory of the source distribution,
#     and are not installed automatically.

#  Walk the NET-SNMP-PASS-MIB::netSnmpPassExamples subtree to see the resulting output


#
#  AgentX Sub-agents
#
                                           #  Run as an AgentX master agent
 master          agentx
                                           #  Listen for network connections (from localhost)
                                           #    rather than the default named socket /var/agentx/master
#agentXSocket    tcp:localhost:705
